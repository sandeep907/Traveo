//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shipping.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShippingEntities : DbContext
    {
        public ShippingEntities()
            : base("name=ShippingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MTEmail> MTEmails { get; set; }
        public virtual DbSet<MTRoleMaster> MTRoleMasters { get; set; }
        public virtual DbSet<SentEmail> SentEmails { get; set; }
        public virtual DbSet<MTOrderStatu> MTOrderStatus { get; set; }
        public virtual DbSet<MTLoginMaster> MTLoginMasters { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Remark> Remarks { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrdersView> OrdersViews { get; set; }
    
        public virtual int UserMaster(Nullable<byte> iptFlagID, Nullable<int> ipiUserID, string ipiImageUrl, string ipvUserEmailID, string ipvUserName, string ipvUserPassword, Nullable<int> iroleId, string ipvFlag, Nullable<int> ipiCount, ObjectParameter ipiErrorID, ObjectParameter ipvResult)
        {
            var iptFlagIDParameter = iptFlagID.HasValue ?
                new ObjectParameter("iptFlagID", iptFlagID) :
                new ObjectParameter("iptFlagID", typeof(byte));
    
            var ipiUserIDParameter = ipiUserID.HasValue ?
                new ObjectParameter("ipiUserID", ipiUserID) :
                new ObjectParameter("ipiUserID", typeof(int));
    
            var ipiImageUrlParameter = ipiImageUrl != null ?
                new ObjectParameter("ipiImageUrl", ipiImageUrl) :
                new ObjectParameter("ipiImageUrl", typeof(string));
    
            var ipvUserEmailIDParameter = ipvUserEmailID != null ?
                new ObjectParameter("ipvUserEmailID", ipvUserEmailID) :
                new ObjectParameter("ipvUserEmailID", typeof(string));
    
            var ipvUserNameParameter = ipvUserName != null ?
                new ObjectParameter("ipvUserName", ipvUserName) :
                new ObjectParameter("ipvUserName", typeof(string));
    
            var ipvUserPasswordParameter = ipvUserPassword != null ?
                new ObjectParameter("ipvUserPassword", ipvUserPassword) :
                new ObjectParameter("ipvUserPassword", typeof(string));
    
            var iroleIdParameter = iroleId.HasValue ?
                new ObjectParameter("iroleId", iroleId) :
                new ObjectParameter("iroleId", typeof(int));
    
            var ipvFlagParameter = ipvFlag != null ?
                new ObjectParameter("ipvFlag", ipvFlag) :
                new ObjectParameter("ipvFlag", typeof(string));
    
            var ipiCountParameter = ipiCount.HasValue ?
                new ObjectParameter("ipiCount", ipiCount) :
                new ObjectParameter("ipiCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserMaster", iptFlagIDParameter, ipiUserIDParameter, ipiImageUrlParameter, ipvUserEmailIDParameter, ipvUserNameParameter, ipvUserPasswordParameter, iroleIdParameter, ipvFlagParameter, ipiCountParameter, ipiErrorID, ipvResult);
        }
    }
}
