@using System.Web.Optimization
@model Shipping.ViewModels.Account.LoginRegisterViewModel
@{
	Layout = null;
}
@Html.HiddenFor(m=>m.IsRegister,new { @id="isRegister"})
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>Surya Courier Services | Log in</title>
	@Styles.Render("~/LoginContent/css")
	@Scripts.Render("~/LoginContent/js")

	<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
	<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
	<!--[if lt IE 9]>
	<script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
	<script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
	<![endif]-->
	<!-- Google Font -->
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
	<style>
		body, html {
			height: 100%;
		}

		.bg {
			/* The image used */
			background-image: url("/Content/dist/img/brett-jordan-phUtWl8RyFE-unsplash.jpg");
			/* Full height */
			height: 100%;
			/* Center and scale the image nicely */
			background-position: center;
			background-repeat: no-repeat;
			background-size: cover;
		}
	</style>
</head>
<body>
	<div class="bg">
		<div class="row">
			<div class="col-md-4">
			</div>
		
			<div class="col-md-4">
			</div>
				<div class="col-md-3 col-xs-12" style="margin-top:200px">
					<!-- Register -->
					<!-- Login -->
					<div class="box" id="dvLog">
						@*<div class="box-header with-border">
					<h3 class="box-title">Login</h3>
				</div>*@
						@using (Html.BeginForm("Logon", "Account", FormMethod.Post, new { @id = "SubmitLogon" }))
						{
							if (TempData["LoginMessage"] != null)
							{
								@Html.Raw(HttpUtility.HtmlDecode(TempData["LoginMessage"].ToString()));
							}


							@Html.AntiForgeryToken()
							<div class="box-body" style="padding: 35px">
								<p style="color: red;    font-style: initial;    font-family: initial;    font-weight: 900;">Dear Agent, request you to please login through your email ID and not User ID. If you forget your password, kindly reach out to your service manager.</p>
								<div class="form-group has-feedback">
									<label for="email">Email:</label>
									@Html.TextBoxFor(model => model.login.UserName, new { @name = "username", @autocomplete = "off", @id = "username", @class = "form-control", @placeholder = "Enter UserEmail",@style="padding: 21px;" })
									<span class="glyphicon glyphicon-user form-control-feedback"></span>
									@Html.ValidationMessageFor(model => model.login.UserName, "", new { @class = "label label-danger" })

								</div>
								<div class="form-group has-feedback">
									@Html.PasswordFor(model => model.login.UserPassword, new { @name = "password", @id = "password", @autocomplete = "off", @class = "form-control", @placeholder = "Enter password" ,@style="padding: 21px;" })
									<span class="glyphicon glyphicon-eye-close form-control-feedback"></span>
									@Html.ValidationMessageFor(model => model.login.UserPassword, "", new { @class = "label label-danger" })
								</div>
								<div class="row">
									<div class="col-xs-4">

									</div>
									<div class="col-xs-4">
										<button type="button" class="btn btn-primary btn-block btn-flat" id="btnReg">Register</button>
									</div>
									<!-- /.col -->
									<div class="col-xs-4">
										<button type="submit" class="btn btn-primary btn-block btn-flat">Sign In</button>
									</div>
									<!-- /.col -->
								</div>
							</div>
							<!-- /.box-body -->
						}
					</div>
					<div class="box box-primary" id="dvReg" style="display:none">
						@*<div class="box-header with-border">
					<h3 class="box-title">Register</h3>
				</div>*@
						@using (Html.BeginForm("AddUser", "Registration", FormMethod.Post, new { enctype = "multipart/form-data" }))
						{
							@Html.AntiForgeryToken()
							<div class="box-body">
								@if (TempData["Message"] != null)
								{
									@Html.Raw(HttpUtility.HtmlDecode(TempData["Message"].ToString()));
								}
								<div class="form-group has-feedback">
									<label for="email">User Name:</label>
									@Html.TextBoxFor(model => model.user.UserName, new { @name = "username", @autocomplete = "off", @id = "Regusername", @class = "form-control", @placeholder = "Enter Name" })
									<span class="glyphicon glyphicon-user form-control-feedback"></span>
									@Html.ValidationMessageFor(model => model.user.UserName, "", new { @class = "label label-danger" })
								</div>
								<div class="form-group has-feedback">
									<label for="email">Email:</label>
									@Html.TextBoxFor(model => model.user.UserEmailAddress, new { @name = "UserEmailAddress", @autocomplete = "off", @id = "UserEmailAddress", @class = "form-control", @placeholder = "Enter Email" })
									<span class="glyphicon glyphicon-envelope form-control-feedback"></span>
									@Html.ValidationMessageFor(model => model.user.UserEmailAddress, "", new { @class = "label label-danger" })
								</div>
								<div class="form-group has-feedback">
									<label for="email">Password:</label>
									@Html.PasswordFor(model => model.user.UserPassword, new { @name = "UserPassword", @autocomplete = "off", @id = "UserPassword", @class = "form-control", @placeholder = "Enter Password" })
									<span class="glyphicon glyphicon-eye-close form-control-feedback"></span>
									@Html.ValidationMessageFor(model => model.user.UserPassword, "", new { @class = "label label-danger" })

								</div>
								<div class="form-group has-feedback">
									<label for="email">Confirm Password:</label>
									@Html.PasswordFor(model => model.user.UserConfirmPassword, new { @name = "UserConfirmPassword", @autocomplete = "off", @id = "UserConfirmPassword", @class = "form-control", @placeholder = "Confirm Password" })
									<span class="glyphicon glyphicon-eye-close form-control-feedback"></span>
									@Html.ValidationMessageFor(model => model.user.UserConfirmPassword, "", new { @class = "label label-danger" })

								</div>
								<div class="form-group has-feedback">
									<label for="email">Role Requested</label>
									@Html.HiddenFor(model => model.user.lstRoles)
									@Html.DropDownListFor(model => model.user.RoleId, new SelectList(Model.user.lstRoles, "ID", "Name", Model.user.RoleId), optionLabel: "Select Role", htmlAttributes: new { @id = "RoleID", @name = "RoleID", @class = "form-control" })
									@Html.ValidationMessageFor(model => model.user.RoleId, "", new { @class = "label label-danger" })

								</div>
								<div class="form-group has-feedback">
									<input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
								</div>
							</div>
							<!-- /.box-body -->
								<div class="col-xs-4">

								</div>
								<div class="col-xs-4">
									<button type="button" class="btn btn-block btn-primary" id="btnLog">Login</button>
								</div>
								<div class="col-xs-4">
									<button type="submit" class="btn btn-block btn-primary">Submit</button>
								</div>
						}
						<br />
						<br />
					</div>
				</div>
				<div class="col-md-1">
				</div>
		</div>
	</div>
	<script>
		$(function () {
			debugger;
			if ($('#isRegister').val() == 'True')
			{
				$('#dvLog').hide();
				$('#dvReg').show();
			}			
			$('input').iCheck({
				checkboxClass: 'icheckbox_square-blue',
				radioClass: 'iradio_square-blue',
				increaseArea: '20%' /* optional */
			});
			$('#btnReg').on("click", (function (e) {
				debugger;
				$('#dvLog').hide();
				$('#dvReg').show();
			}));
			$('#btnLog').on("click", (function (e) {
				debugger;
				$('#dvReg').hide();
				$('#dvLog').show();
			}));
		});

	</script>
</body>
</html>